{"version":3,"sources":["api/axios.js","api/index.js","redux/actions/posts.js","redux/constants/index.js","components/Pagination/index.jsx","redux/actions/pagination.js","pages/Home/index.jsx","pages/Post/index.jsx","App.js","redux/reducers/posts.js","redux/reducers/pagination.js","redux/rootReducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["Axios","create","baseURL","headers","Accept","getPostApi","id","axios","url","method","deletePostsApi","editPostApi","post","data","deletePostSuccess","payload","type","deletePost","dispatch","a","message","success","Pagination","useState","start","setStart","pagination","useSelector","useDispatch","useEffect","currPage","total","className","onClick","prev","curr","handleClick","totalPages","pages","num","i","push","key","pagesCount","page","changePage","Home","posts","res","length","Math","ceil","handleDelete","columns","title","dataIndex","render","text","record","to","size","onConfirm","dataSource","slice","Post","console","log","useParams","Form","useForm","form","selectedPost","loading","getPost","initialValues","body","layout","name","onFinish","values","error","Item","label","rules","required","disabled","htmlType","App","path","element","exact","initialState","rootReducer","combineReducers","state","action","newPosts","filter","middlewares","thunkMiddleware","createStore","applyMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.64399e49.chunk.js","sourcesContent":["import Axios from \"axios\";\n\nexport default Axios.create({\n  baseURL: \"https://jsonplaceholder.typicode.com\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n","import axios from \"./axios\";\n\nexport const getPostApi = id =>\n  axios({\n    url: `/posts/${id}`,\n    method: \"GET\",\n  });\n\nexport const getPostsApi = () =>\n  axios({\n    url: \"/posts\",\n    method: \"GET\",\n  });\n\nexport const deletePostsApi = id =>\n  axios({\n    url: `/posts/${id}`,\n    method: \"DELETE\",\n  });\n\nexport const editPostApi = post =>\n  axios({\n    url: `/posts`,\n    method: \"POST\",\n    data: post,\n  });\n","import { message } from \"antd\";\nimport { getPostsApi, deletePostsApi, getPostApi, editPostApi } from \"../../api\";\nimport {\n  GET_POSTS_START,\n  GET_POSTS_SUCCESS,\n  GET_POSTS_FAILURE,\n  DELETE_POSTS_START,\n  DELETE_POSTS_FAILURE,\n  DELETE_POSTS_SUCCESS,\n  GET_POST_START,\n  GET_POST_FAILURE,\n  GET_POST_SUCCESS,\n  EDIT_POSTS_START,\n  EDIT_POSTS_FAILURE,\n  EDIT_POSTS_SUCCESS,\n} from \"../constants\";\n\n//get single post\nexport const getPostStart = () => ({\n  type: GET_POST_START,\n});\n\nexport const getPostFailure = error => {\n  return {\n    payload: error,\n    type: GET_POST_FAILURE,\n  };\n};\n\nexport const getPostSuccess = data => {\n  return {\n    payload: data,\n    type: GET_POST_SUCCESS,\n  };\n};\n\nexport const getPost = id => async dispatch => {\n  dispatch(getPostStart());\n  try {\n    const res = await getPostApi(id);\n    return dispatch(getPostSuccess(res.data));\n  } catch (err) {\n    return dispatch(getPostFailure(\"Something went wrong...\"));\n  }\n};\n\n// get all posts\nexport const getPostsStart = () => ({\n  type: GET_POSTS_START,\n});\n\nexport const getPostsFailure = error => {\n  return {\n    payload: error,\n    type: GET_POSTS_FAILURE,\n  };\n};\n\nexport const getPostsSuccess = data => {\n  return {\n    payload: data,\n    type: GET_POSTS_SUCCESS,\n  };\n};\n\nexport const getPosts = () => async dispatch => {\n  dispatch(getPostsStart());\n  try {\n    const res = await getPostsApi();\n    return dispatch(getPostsSuccess(res.data));\n  } catch (err) {\n    return dispatch(getPostsFailure(\"Something went wrong...\"));\n  }\n};\n\n// delete post function\nexport const deletePostStart = () => ({\n  type: DELETE_POSTS_START,\n});\n\nexport const deletePostFailure = error => {\n  return {\n    payload: error,\n    type: DELETE_POSTS_FAILURE,\n  };\n};\n\nexport const deletePostSuccess = id => {\n  return {\n    payload: id,\n    type: DELETE_POSTS_SUCCESS,\n  };\n};\n\nexport const deletePost = id => async dispatch => {\n  dispatch(deletePostStart());\n  try {\n    await deletePostsApi(id);\n    message.success(\"Post deleted successfully!\");\n    return dispatch(deletePostSuccess(id));\n  } catch (err) {\n    message.success(\"Something went wrong...\");\n    return dispatch(deletePostFailure(\"Something went wrong...\"));\n  }\n};\n\n// edit post\nexport const editPostStart = () => ({\n  type: EDIT_POSTS_START,\n});\n\nexport const editPostFailure = error => {\n  return {\n    payload: error,\n    type: EDIT_POSTS_FAILURE,\n  };\n};\n\nexport const editPostSuccess = () => {\n  return {\n    type: EDIT_POSTS_SUCCESS,\n  };\n};\n\nexport const editPost = post => async dispatch => {\n  dispatch(editPostStart());\n  try {\n    await editPostApi(post);\n    message.success(\"Post edited successfully!\");\n    return dispatch(editPostSuccess());\n  } catch (err) {\n    message.error(\"Something went wrong, please try again\");\n    return dispatch(editPostFailure(\"Something went wrong...\"));\n  }\n};\n","export const GET_POSTS_START = \"GET_POSTS_START\";\nexport const GET_POSTS_SUCCESS = \"GET_POSTS_SUCCESS\";\nexport const GET_POSTS_FAILURE = \"GET_POSTS_FAILURE\";\n\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\nexport const INITIATE_PAGES = \"INITIATE_PAGES\";\n\nexport const DELETE_POSTS_START = \"DELETE_POSTS_START\";\nexport const DELETE_POSTS_FAILURE = \"DELETE_POSTS_FAILURE\";\nexport const DELETE_POSTS_SUCCESS = \"DELETE_POSTS_SUCCESS\";\n\nexport const GET_POST_START = \"GET_POST_START\";\nexport const GET_POST_FAILURE = \"GET_POST_FAILURE\";\nexport const GET_POST_SUCCESS = \"GET_POST_SUCCESS\";\n\nexport const EDIT_POSTS_START = \"EDIT_POSTS_START\";\nexport const EDIT_POSTS_FAILURE = \"EDIT_POSTS_FAILURE\";\nexport const EDIT_POSTS_SUCCESS = \"EDIT_POSTS_SUCCESS\";\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { changePage } from \"../../redux/actions/pagination\";\nimport \"./style.css\";\nconst maxPagesNum = 6;\n\nconst pagesCount = (start, curr, handleClick, totalPages) => {\n  const pages = [];\n  let num = maxPagesNum + start;\n  if (num > totalPages) num = totalPages;\n\n  for (let i = start; i < num; ++i) {\n    pages.push(\n      <div onClick={() => handleClick(i)} key={i} className={curr === i ? \"active\" : \"\"}>\n        {i}\n      </div>\n    );\n  }\n  return pages;\n};\nconst Pagination = () => {\n  const [start, setStart] = useState(1);\n  const { pagination } = useSelector(({ pagination }) => ({ pagination }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (pagination.currPage >= start + maxPagesNum) {\n      setStart(pagination.currPage);\n    }\n    // eslint-disable-next-line\n  }, [pagination.currPage]);\n\n  const handleChangePage = page => {\n    dispatch(changePage(page));\n  };\n  const handlePrev = () => {\n    if (start === 1) return;\n    setStart(prev => prev - 1);\n  };\n  const handleNext = () => {\n    if (maxPagesNum + start >= pagination.totalPages) return;\n    setStart(prev => prev + 1);\n  };\n  if (pagination.total < 11) return null;\n  return (\n    <div className=\"pagination\">\n      <div onClick={handlePrev}>&laquo;</div>\n      {pagesCount(start, pagination.currPage, handleChangePage, pagination.totalPages)}\n      <div onClick={handleNext}>&raquo;</div>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import { CHANGE_PAGE, INITIATE_PAGES } from \"../constants\";\n\nexport const initiatePages = meta => {\n  return {\n    payload: meta,\n    type: INITIATE_PAGES,\n  };\n};\n\nexport const changePage = page => {\n  return {\n    payload: page,\n    type: CHANGE_PAGE,\n  };\n};\n","import React, { useEffect } from \"react\";\nimport { Popconfirm, Space, Table } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { deletePost, getPosts } from \"../../redux/actions/posts\";\nimport Pagination from \"../../components/Pagination\";\nimport { initiatePages } from \"../../redux/actions/pagination\";\n\nconst perPage = 10;\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { posts, pagination } = useSelector(({ posts: { posts }, pagination }) => ({\n    posts,\n    pagination,\n  }));\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (posts.length) {\n      const total = posts.length;\n      const totalPages = Math.ceil(total / 10);\n      let currPage = pagination.currPage;\n      if (currPage > totalPages) currPage--;\n      dispatch(initiatePages({ total, totalPages: totalPages + 1, currPage }));\n    }\n  }, [dispatch, posts, pagination.currPage]);\n\n  const handleDelete = async id => {\n    await dispatch(deletePost(id));\n  };\n\n  const columns = [\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      key: \"title\",\n      render: (text, record) => <Link to={`/post/${record.id}`}>{text}</Link>,\n    },\n    {\n      title: \"Description\",\n      dataIndex: \"body\",\n      key: \"body\",\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <Popconfirm\n            title=\"Sure to delete?\"\n            onConfirm={() => {\n              handleDelete(record.id);\n            }}>\n            <span>Delete</span>\n          </Popconfirm>\n          <Link to={`/post/${record.id}`}>Edit</Link>\n        </Space>\n      ),\n    },\n  ];\n  return (\n    <div className=\"home-page\">\n      <h1>Welcome to posts home</h1>\n      <Table\n        dataSource={posts.slice((pagination.currPage - 1) * perPage, pagination.currPage * perPage)}\n        pagination={false}\n        columns={columns}\n      />\n      <Pagination />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { editPost, getPost } from \"../../redux/actions/posts\";\nimport { Form, Input, Button } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\n\nconst Post = () => {\n  console.log(\"useParams()\", useParams());\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n\n  const { selectedPost, loading } = useSelector(({ posts }) => posts);\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id, dispatch]);\n\n  const onFinish = values => {\n    console.log(values);\n    dispatch(editPost({ ...values, id }));\n  };\n  if (loading || !selectedPost) return <div>...Loading</div>;\n  return (\n    <div>\n      <Link to=\"/\">Home</Link>\n      <Form\n        initialValues={{ body: selectedPost.body, title: selectedPost.title }}\n        layout=\"vertical\"\n        form={form}\n        name=\"control-hooks\"\n        onFinish={onFinish}>\n        <Form.Item\n          name=\"title\"\n          label=\"Title\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}>\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name=\"body\"\n          label=\"Description\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}>\n          <TextArea />\n        </Form.Item>\n\n        <Form.Item>\n          <Button disabled={loading} type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport { Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Post from \"./pages/Post\";\nimport \"antd/dist/antd.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route exact path=\"post/:id\" element={<Post />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  GET_POSTS_FAILURE,\n  GET_POSTS_START,\n  GET_POSTS_SUCCESS,\n  DELETE_POSTS_START,\n  DELETE_POSTS_FAILURE,\n  DELETE_POSTS_SUCCESS,\n  GET_POST_START,\n  GET_POST_FAILURE,\n  GET_POST_SUCCESS,\n  EDIT_POSTS_START,\n  EDIT_POSTS_FAILURE,\n  EDIT_POSTS_SUCCESS,\n} from \"../constants\";\n\nconst initialState = {\n  posts: [],\n  selectedPost: null,\n  error: null,\n  loading: false,\n};\n\nexport default function postReducer(state = initialState, action) {\n  switch (action.type) {\n    // get posts list\n    case GET_POSTS_START: {\n      return { ...state, error: null, loading: true };\n    }\n    case GET_POSTS_FAILURE: {\n      return { ...state, error: action.payload, loading: false };\n    }\n    case GET_POSTS_SUCCESS: {\n      return { ...state, posts: action.payload, loading: false };\n    }\n    // delete post\n    case DELETE_POSTS_START: {\n      return { ...state, error: null, loading: true };\n    }\n    case DELETE_POSTS_FAILURE: {\n      return { ...state, error: action.payload, loading: false };\n    }\n    case DELETE_POSTS_SUCCESS: {\n      const newPosts = state.posts.filter(post => post.id !== action.payload);\n      return { ...state, posts: newPosts, loading: false };\n    }\n    // get single post\n    case GET_POST_START: {\n      return { ...state, error: null, loading: true };\n    }\n    case GET_POST_FAILURE: {\n      return { ...state, error: action.payload, loading: false };\n    }\n    case GET_POST_SUCCESS: {\n      return { ...state, selectedPost: action.payload, loading: false };\n    }\n    // edit post\n    case EDIT_POSTS_START: {\n      return { ...state, error: null, loading: true };\n    }\n    case EDIT_POSTS_FAILURE: {\n      return { ...state, error: action.payload, loading: false };\n    }\n    case EDIT_POSTS_SUCCESS: {\n      return { ...state, loading: false };\n    }\n    default:\n      return state;\n  }\n}\n","import { CHANGE_PAGE, INITIATE_PAGES } from \"../constants\";\n\nconst initialState = {\n  total: 0,\n  currPage: 1,\n  totalPages: 0,\n};\n\nexport default function postReducer(state = initialState, action) {\n  switch (action.type) {\n    case INITIATE_PAGES: {\n      return { ...state, ...action.payload };\n    }\n    case CHANGE_PAGE: {\n      return { ...state, currPage: action.payload };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport postsReducer from \"./reducers/posts.js\";\nimport paginationReducer from \"./reducers/pagination.js\";\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  pagination: paginationReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nimport rootReducer from \"./rootReducer\";\n\nconst middlewares = [thunkMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  const logger = createLogger();\n  middlewares.push(logger);\n}\n\nexport default createStore(rootReducer, applyMiddleware(...middlewares));\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}